version: "3"

services:
  local-ingress:
    image : peliqan/local-ingress:latest
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - web-frontend
      - backoffice
      - data-app
    volumes:
      - ./certificate.crt:/etc/ssl/certs/certificate.crt
      - ./certificate.key:/etc/ssl/private/certificate.key
    environment:
      - HOSTNAME=${PUBLIC_INGRESS_HOSTNAME:-localhost}
    networks:
        local:
    restart: always

  db:
    image: postgres:15.2
    environment:
      - POSTGRES_USER=${DATABASE_USER:-peliqan}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-peliqan}
      - POSTGRES_DB=${DATABASE_NAME:-peliqan}
    networks:
      local:
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

  redis:
    image: redis/redis-stack-server:latest
    networks:
      local:
    restart: always

  mjml:
    image: liminspace/mjml-tcpserver:0.10
    user: "1000:1000"
    networks:
      local:
    restart: always

  backend:
    image: peliqan/backend:latest
    environment:
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - PELIQAN_WAREHOUSE_HOST=${PELIQAN_WAREHOUSE_HOST:-localhost}
      - SINGER_POSTGRES_TARGET_HOST_WITHOUT_POOLER=${SINGER_POSTGRES_TARGET_HOST_WITHOUT_POOLER}
      - PUBLIC_BACKEND_URL=${PUBLIC_BACKEND_URL:-http://localhost:8000}
      - PUBLIC_WEB_FRONTEND_URL=${PUBLIC_WEB_FRONTEND_URL:-http://localhost:3000}
      - MIGRATE_ON_STARTUP=${MIGRATE_ON_STARTUP:-true}
      - LOAD_SERVER_DEFINITIONS=${LOAD_SERVER_DEFINITIONS:-true}
      - SYNC_TEMPLATES_ON_STARTUP=${SYNC_TEMPLATES_ON_STARTUP:-false}
      - DATABASE_USER=${DATABASE_USER:-peliqan}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-peliqan}
      - DATABASE_NAME=${DATABASE_NAME:-peliqan}
      - ADDITIONAL_APPS
      - MEDIA_URL=${MEDIA_URL:-http://localhost:4000/media/}
      - EMAIL_SMTP
      - EMAIL_SMTP_HOST
      - EMAIL_SMTP_PORT
      - EMAIL_SMTP_USE_TLS
      - EMAIL_SMTP_USER
      - EMAIL_SMTP_PASSWORD
      - FROM_EMAIL
      - EMAIL_VERIFY_SECRET_KEY=${EMAIL_VERIFY_SECRET_KEY}
      - SINGER_TARGET_SERVER_TYPE=${SINGER_TARGET_SERVER_TYPE}
      - ENV=${ENV:-ON_PREM}
      - OAUTH_SECRET_KEY=${OAUTH_SECRET_KEY}
      - AES_SECRET_KEY=${AES_SECRET_KEY}
      - DD_SERVICE=backend
      - MIXPANEL_API_TOKEN=${MIXPANEL_API_TOKEN}
      - EXTRA_ALLOWED_HOSTS=${EXTRA_ALLOWED_HOSTS}
    expose:
      - "8000"
    depends_on:
      - db
      - redis
      - mjml
      - trinocatalog-volume-fixer
    volumes:
      - trinocatalog:/etc/catalog
      - singerconfig:/etc/singer_config
      - streamlit_apps:/etc/streamlit_apps
      - connector_icons:/etc/connector_icons
      - singerDependencies:/etc/.virtualenvs/
      - ./definitions:/etc/connectors/definitions
    networks:
      local:
    restart: always
    stdin_open: false
    tty: false

  celery:
    image: peliqan/backend:latest
    environment:
      - PELIQAN_WAREHOUSE_HOST=${PELIQAN_WAREHOUSE_HOST:-localhost}
      - SINGER_POSTGRES_TARGET_HOST_WITHOUT_POOLER=${SINGER_POSTGRES_TARGET_HOST_WITHOUT_POOLER}
      - PUBLIC_BACKEND_URL=${PUBLIC_BACKEND_URL:-http://localhost:8000}
      - PUBLIC_WEB_FRONTEND_URL=${PUBLIC_WEB_FRONTEND_URL:-http://localhost:3000}
      - MIGRATE_ON_STARTUP=${MIGRATE_ON_STARTUP:-true}
      - SYNC_TEMPLATES_ON_STARTUP=${SYNC_TEMPLATES_ON_STARTUP:-false}
      - DATABASE_USER=${DATABASE_USER:-peliqan}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-peliqan}
      - DATABASE_NAME=${DATABASE_NAME:-peliqan}
      - ADDITIONAL_APPS
      - MEDIA_URL=${MEDIA_URL:-http://localhost:4000/media/}
      - EMAIL_SMTP
      - EMAIL_SMTP_HOST
      - EMAIL_SMTP_PORT
      - EMAIL_SMTP_USE_TLS
      - EMAIL_SMTP_USER
      - EMAIL_SMTP_PASSWORD
      - FROM_EMAIL
      - ENV=${ENV:-ON_PREM}
      - OAUTH_SECRET_KEY=${OAUTH_SECRET_KEY}
      - AES_SECRET_KEY=${AES_SECRET_KEY}
      - DD_SERVICE=celery
      - MIXPANEL_API_TOKEN=${MIXPANEL_API_TOKEN}
    command: celery worker -l INFO -Q celery
    depends_on:
      - backend
    volumes:
      - streamlit_apps:/etc/streamlit_apps
    networks:
      local:
    restart: always
    stdin_open: false
    tty: false

  celery-export-worker:
    image: peliqan/backend:latest
    command: celery worker -l INFO -Q export
    depends_on:
      - backend
    environment:
      - PELIQAN_WAREHOUSE_HOST=${PELIQAN_WAREHOUSE_HOST:-localhost}
      - SINGER_POSTGRES_TARGET_HOST_WITHOUT_POOLER=${SINGER_POSTGRES_TARGET_HOST_WITHOUT_POOLER}
      - PUBLIC_BACKEND_URL=${PUBLIC_BACKEND_URL:-http://localhost:8000}
      - PUBLIC_WEB_FRONTEND_URL=${PUBLIC_WEB_FRONTEND_URL:-http://localhost:3000}
      - MIGRATE_ON_STARTUP=${MIGRATE_ON_STARTUP:-true}
      - SYNC_TEMPLATES_ON_STARTUP=${SYNC_TEMPLATES_ON_STARTUP:-false}
      - DATABASE_USER=${DATABASE_USER:-peliqan}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-peliqan}
      - DATABASE_NAME=${DATABASE_NAME:-peliqan}
      - ADDITIONAL_APPS
      - MEDIA_URL=${MEDIA_URL:-http://localhost:4000/media/}
      - EMAIL_SMTP
      - EMAIL_SMTP_HOST
      - EMAIL_SMTP_PORT
      - EMAIL_SMTP_USE_TLS
      - EMAIL_SMTP_USER
      - EMAIL_SMTP_PASSWORD
      - FROM_EMAIL
      - ENV=${ENV:-ON_PREM}
      - OAUTH_SECRET_KEY=${OAUTH_SECRET_KEY}
      - AES_SECRET_KEY=${AES_SECRET_KEY}
      - DD_SERVICE=celery-export-worker
    networks:
      local:
    restart: always
    stdin_open: false
    tty: false

  celery-sync-worker:
    image: peliqan/backend:latest
    command: celery worker -l INFO -Q sync
    depends_on:
      - backend
    environment:
      - PELIQAN_WAREHOUSE_HOST=${PELIQAN_WAREHOUSE_HOST:-localhost}
      - SINGER_POSTGRES_TARGET_HOST_WITHOUT_POOLER=${SINGER_POSTGRES_TARGET_HOST_WITHOUT_POOLER}
      - PUBLIC_BACKEND_URL=${PUBLIC_BACKEND_URL:-http://localhost:8000}
      - PUBLIC_WEB_FRONTEND_URL=${PUBLIC_WEB_FRONTEND_URL:-http://localhost:3000}
      - MIGRATE_ON_STARTUP=${MIGRATE_ON_STARTUP:-true}
      - SYNC_TEMPLATES_ON_STARTUP=${SYNC_TEMPLATES_ON_STARTUP:-false}
      - DATABASE_USER=${DATABASE_USER:-peliqan}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-peliqan}
      - DATABASE_NAME=${DATABASE_NAME:-peliqan}
      - SINGER_TARGET_SERVER_TYPE=${SINGER_TARGET_SERVER_TYPE}
      - SINGER_POSTGRES_TARGET_USERNAME=${SINGER_POSTGRES_TARGET_USERNAME}
      - SINGER_POSTGRES_TARGET_PASSWORD=${SINGER_POSTGRES_TARGET_PASSWORD}
      - SINGER_POSTGRES_TARGET_HOST=${SINGER_POSTGRES_TARGET_HOST}
      - ADDITIONAL_APPS
      - MEDIA_URL=${MEDIA_URL:-http://localhost:4000/media/}
      - EMAIL_SMTP
      - EMAIL_SMTP_HOST
      - EMAIL_SMTP_PORT
      - EMAIL_SMTP_USE_TLS
      - EMAIL_SMTP_USER
      - EMAIL_SMTP_PASSWORD
      - FROM_EMAIL
      - ENV=${ENV:-ON_PREM}
      - OAUTH_SECRET_KEY=${OAUTH_SECRET_KEY}
      - AES_SECRET_KEY=${AES_SECRET_KEY}
      - DD_SERVICE=celery-sync-worker
    volumes:
      - trinocatalog:/etc/catalog
    networks:
      local:
    restart: always
    stdin_open: false
    tty: false

  celery-singer-worker:
    image: peliqan/backend:latest
    command: celery-singer worker -l INFO -Q singer
    depends_on:
      - backend
    environment:
      - PELIQAN_WAREHOUSE_HOST=${PELIQAN_WAREHOUSE_HOST:-localhost}
      - PUBLIC_BACKEND_URL=${PUBLIC_BACKEND_URL:-http://localhost:8000}
      - PUBLIC_WEB_FRONTEND_URL=${PUBLIC_WEB_FRONTEND_URL:-http://localhost:3000}
      - MIGRATE_ON_STARTUP=${MIGRATE_ON_STARTUP:-true}
      - SYNC_TEMPLATES_ON_STARTUP=${SYNC_TEMPLATES_ON_STARTUP:-false}
      - DATABASE_USER=${DATABASE_USER:-peliqan}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-peliqan}
      - DATABASE_NAME=${DATABASE_NAME:-peliqan}
      - ADDITIONAL_APPS
      - MEDIA_URL=${MEDIA_URL:-http://localhost:4000/media/}
      - EMAIL_SMTP
      - EMAIL_SMTP_HOST
      - EMAIL_SMTP_PORT
      - EMAIL_SMTP_USE_TLS
      - EMAIL_SMTP_USER
      - EMAIL_SMTP_PASSWORD
      - FROM_EMAIL
      - SINGER_TARGET_SERVER_TYPE=${SINGER_TARGET_SERVER_TYPE}
      - SINGER_POSTGRES_TARGET_USERNAME=${SINGER_POSTGRES_TARGET_USERNAME}
      - SINGER_POSTGRES_TARGET_PASSWORD=${SINGER_POSTGRES_TARGET_PASSWORD}
      - SINGER_POSTGRES_TARGET_HOST=${SINGER_POSTGRES_TARGET_HOST}
      - HUBSPOT_URL=${HUBSPOT_URL}
      - HUBSPOT_REQUEST_TIMEOUT=${HUBSPOT_REQUEST_TIMEOUT}
      - JIRA_USER_AGENT=${JIRA_USER_AGENT}
      - JIRA_REQUEST_TIMEOUT=${JIRA_REQUEST_TIMEOUT}
      - JIRA_GROUPS=${JIRA_GROUPS}
      - SALESFORCE_API_TYPE=${SALESFORCE_API_TYPE}
      - SALESFORCE_LOOKBACK_WINDOW=${SALESFORCE_LOOKBACK_WINDOW}
      - ENV=${ENV:-ON_PREM}
      - OAUTH_SECRET_KEY=${OAUTH_SECRET_KEY}
      - AES_SECRET_KEY=${AES_SECRET_KEY}
      - DD_SERVICE=celery-singer-worker
    volumes:
      - singerconfig:/etc/singer_config
      - singerDependencies:/etc/.virtualenvs/
    networks:
      local:
    restart: always
    stdin_open: false
    tty: false

  celery-beat-worker:
    image: peliqan/backend:latest
    command: celery-beat beat -l INFO -S redbeat.RedBeatScheduler
    depends_on:
      - backend
    environment:
      - PELIQAN_WAREHOUSE_HOST=${PELIQAN_WAREHOUSE_HOST:-localhost}
      - PUBLIC_BACKEND_URL=${PUBLIC_BACKEND_URL:-http://localhost:8000}
      - PUBLIC_WEB_FRONTEND_URL=${PUBLIC_WEB_FRONTEND_URL:-http://localhost:3000}
      - MIGRATE_ON_STARTUP=${MIGRATE_ON_STARTUP:-true}
      - SYNC_TEMPLATES_ON_STARTUP=${SYNC_TEMPLATES_ON_STARTUP:-false}
      - DATABASE_USER=${DATABASE_USER:-peliqan}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-peliqan}
      - DATABASE_NAME=${DATABASE_NAME:-peliqan}
      - ADDITIONAL_APPS
      - MEDIA_URL=${MEDIA_URL:-http://localhost:4000/media/}
      - EMAIL_SMTP
      - EMAIL_SMTP_HOST
      - EMAIL_SMTP_PORT
      - EMAIL_SMTP_USE_TLS
      - EMAIL_SMTP_USER
      - EMAIL_SMTP_PASSWORD
      - FROM_EMAIL
      - ENV=${ENV:-ON_PREM}
      - OAUTH_SECRET_KEY=${OAUTH_SECRET_KEY}
      - AES_SECRET_KEY=${AES_SECRET_KEY}
      - DD_SERVICE=celery-beat-worker
    networks:
      local:
    restart: always
    stdin_open: false
    tty: false

  web-frontend:
    image: peliqan/web-frontend:latest
    environment:
      - PUBLIC_BACKEND_URL=${PUBLIC_BACKEND_URL:-http://localhost:8000}
      - PUBLIC_WEB_FRONTEND_URL=${PUBLIC_WEB_FRONTEND_URL:-http://localhost:3000}
      - ADDITIONAL_MODULES
      - ENV=${ENV:-ON_PREM}
      - DD_SERVICE=web-frontend
      - PUBLIC_API_ENDPOINTS_BASE_URL=${PUBLIC_API_ENDPOINTS_BASE_URL:-http://localhost:5000}
    expose:
      - "3000"
    depends_on:
      - backend
    volumes:
      - connector_icons:/baserow/web-frontend/modules/core/static/img/db/shared
    networks:
      local:
    restart: always
    stdin_open: false
    tty: false

  data-app:
    image: peliqan/data-app:latest
    expose:
      - "80"
      - "5000"
      - "5001"
    networks:
      local:
    environment:
      - DD_SERVICE=data-app
    volumes:
      - streamlit_apps:/etc/streamlit_apps
    depends_on:
      - backend
    restart: always
    stdin_open: true
    tty: true

  backoffice:
    image: peliqan/backoffice:latest
    environment:
      - NUXT_PUBLIC_BACKEND_URL=${PUBLIC_BACKEND_URL:-http://localhost:8000}
      - NUXT_PUBLIC_BACKOFFICE_URL=${PUBLIC_BACKOFFICE_URL:-http://localhost:3001}
      - NUXT_BACKEND_URL=${PRIVATE_BACKEND_URL:-http://backend:8000}
      - NUXT_PUBLIC_WEB_FRONTEND_URL=${PUBLIC_WEB_FRONTEND_URL:-http://localhost:3000}
      - NUXT_PUBLIC_DEV_PORT=${NUXT_DEV_PORT:-24678}
      - ADDITIONAL_MODULES
      - NUXT_PUBLIC_ENV=${ENV:-ON_PREM}
      - DD_SERVICE=backoffice
    expose:
      - "3001"
    depends_on:
      - backend
    networks:
      local:
    restart: always
    stdin_open: false
    tty: false

  trinocatalog-volume-fixer:
    image: bash:4.4
    command: chown 1000:1000 -R /etc/calcite_config
    volumes:
      - trinocatalog:/etc/calcite_config
    networks:
      local:

  singerconfig-volume-fixer:
    image: bash:4.4
    command: chown 1000:1000 -R /etc/singer_config
    volumes:
      - singerconfig:/etc/singer_config
    networks:
      local:

  singerDependencies-volume-fixer:
    image: bash:4.4
    command: chown 1000:1000 -R /etc/.virtualenvs
    volumes:
      - singerDependencies:/etc/.virtualenvs
    networks:
      local:

  data-app-volume-fixer:
    image: bash:4.4
    command: chown 1000:1000 -R /etc/streamlit_apps
    volumes:
      - streamlit_apps:/etc/streamlit_apps

  connector-icons-volume-fixer:
    image: bash:4.4
    command: chown 1000:1000 -R /etc/connector_icons
    volumes:
      - connector_icons:/etc/connector_icons
    networks:
      local:

  trino-calcite:
    image: peliqan/trino-calcite:latest-amd64
    ports:
      - "8082:8082"
    networks:
      local:
    volumes:
      - trinocatalog:/etc/catalog
    depends_on:
      - trinocatalog-volume-fixer

  singer-target-db:
    image: postgres:15.2
    environment:
      POSTGRES_USER: ${SINGER_POSTGRES_TARGET_USERNAME:-singer}
      POSTGRES_PASSWORD: ${SINGER_POSTGRES_TARGET_PASSWORD:-singer}
    ports:
      - 5433:5432
    restart: always
    networks:
      local:
    volumes:
      - singer_target_data:/var/lib/postgresql/data
volumes:
  pgdata:
  trinocatalog:
  connector_icons:
  streamlit_apps:
  singerconfig:
  singerDependencies:
  singer_target_data:
  airbyte:
networks:
  local:
    driver: bridge
