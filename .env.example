# ENV controls the behaviour of the application.
# For on premise deployments, set ENV=ON_PREM ( IMP )
ENV=ON_PREM

# Generate a random string for the secret key, length can be 64 bytes ( Optimal )
SECRET_KEY="example"

# Modify App DB username and database name if required
DATABASE_USER=peliqan
DATABASE_NAME=peliqan

# Generate a password for the database user ( App DB )
DATABASE_PASSWORD=

# Generate a password for the redis user ( App Cache / Task Queue )
REDIS_PASSWORD=

# Create admin user for the application
ADMIN_EMAIL=admin@peliqan.io
# Password should contain at least 8 characters
ADMIN_PASSWORD=admin

# Public URL for backend and frontend can be configured here
# NOTE : For on-prem deployments, the public URL should be the same as the backend URL
# NOTE : Use https schema if certificates are configured in the nginx server
PUBLIC_BACKEND_URL=http://localhost
PUBLIC_WEB_FRONTEND_URL=http://localhost

# NOTE : The public API endpoint base URL should be the same as the backend URL / Frontend URL
PUBLIC_API_ENDPOINTS_BASE_URL=http://localhost

# Generate a random string for the email verification secret key, length can be 64 bytes ( Optimal )
EMAIL_VERIFY_SECRET_KEY="example"

# Configure custom smtp server settings for sending password reset emails
EMAIL_SMTP=
EMAIL_SMTP_HOST=
EMAIL_SMTP_PORT=
EMAIL_SMTP_USE_TLS=
EMAIL_SMTP_USER=
EMAIL_SMTP_PASSWORD=
FROM_EMAIL=

# PELIQAN_WAREHOUSE_HOST is the IP / Hostname / Domain name ( If DNS is configured ) of the Peliqan server
# Peliqan warehouse is a PostgresSQL server that stores the data from the connectors ( Default target )
# The host name is displayed in the Peliqan UI, i.e, the IT Admin can choose to open the Postgres server inside the network
PELIQAN_WAREHOUSE_HOST=localhost

# Allowed hosts for the Django application
# This is a security measure to prevent host header attacks
# The allowed hosts should be the same as the public URL
# If the public URL is a domain name, then the domain name should be added to the allowed hosts
# If the public URL is an IP address, then the IP address should be added to the allowed hosts
# localhost and 127.0.0.1 ( Loop back addresses ) are allowed by default
# If there are multiple allowed hosts, then they should be separated by a comma
# Example: EXTRA_ALLOWED_HOSTS="test.peliqan.io,test2.peliqan.io"
EXTRA_ALLOWED_HOSTS=

# SINGER ENVIRONMENT VARIABLES -------------------------------------------------------------------------
# The singer environment variables are used to configure the singer connectors
# NOTE : Try to keep the defaults except for the passwords and the hostnames
SINGER_TARGET_SERVER_TYPE=postgres

# Generate a different username if required
# Suggested to keep the default username
SINGER_POSTGRES_TARGET_USERNAME=singer

# Generate a password for the singer user ( Target DB )
# By default, the password is singer
SINGER_POSTGRES_TARGET_PASSWORD=

# Docker hostname for the singer target DB
# Suggested to keep the default hostname
SINGER_POSTGRES_TARGET_HOST=singer-target-db
SINGER_POSTGRES_TARGET_HOST_WITHOUT_POOLER=singer-target-db

# Keep the below defaults
HUBSPOT_URL=https://api.hubapi.com/
HUBSPOT_REQUEST_TIMEOUT=300

# Keep the below defaults
JIRA_USER_AGENT=agent
JIRA_REQUEST_TIMEOUT=300
JIRA_GROUPS=jira-administrators,site-admins,jira-software-users

# Keep the below defaults
SALESFORCE_API_TYPE=BULK
SALESFORCE_LOOKBACK_WINDOW=10

# Generate a random string for the Oauth secret key, length can be 64 bytes ( Optimal )
OAUTH_SECRET_KEY=

# BackOffice VARIABLES
PUBLIC_BACKOFFICE_URL=https://localhost/backoffice

# Generate a random string for the AES secret key, length can be 64 bytes ( Optimal )
AES_SECRET_KEY=

# Public hostname for the ingress nginx
PUBLIC_INGRESS_HOSTNAME=localhost